name: Data-Prep - Train - Evaluate - Release

on:
  push:
    tags: ['v[0-9]+.[0-9]+.[0-9]+']      

permissions:
  contents: write

jobs:
  pipeline:
    runs-on: ubuntu-latest
    env:
      RAW_FILE:    data/raw/a1_RestaurantReviews.tsv
      TRAIN_CSV:   data/processed/train.csv
      TEST_CSV:    data/processed/test.csv
      VEC_FILE:    artifacts/vectorizer.pkl
      MODEL_FILE:  artifacts/model.pkl
      VERSION:     ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install test/lint dependencies
        run: pip install pytest pylint coverage

      - name: Lint with pylint
        run: pylint src/

      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage report

      - name: Prepare data
        run: |
          python src/data_prep.py \
            --raw-out   "${{ env.RAW_FILE }}" \
            --train-out "${{ env.TRAIN_CSV }}" \
            --test-out  "${{ env.TEST_CSV }}"

      - name: Train model
        run: |
          python src/train.py \
            --data       "${{ env.TRAIN_CSV }}" \
            --vectorizer "${{ env.VEC_FILE }}" \
            --model      "${{ env.MODEL_FILE }}"

      - name: Evaluate model
        run: |
          python src/evaluate.py \
            --model      "${{ env.MODEL_FILE }}" \
            --vectorizer "${{ env.VEC_FILE }}" \
            --test-data  "${{ env.TEST_CSV }}"

      - name: Publish artifacts to GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create or view the release
          gh release view "$VERSION" >/dev/null 2>&1 || \
            gh release create "$VERSION" --title "$VERSION" --notes \
              "Automated build for $VERSION"
          # Upload vectorizer and model
          gh release upload "$VERSION" \
            "${{ env.VEC_FILE }}" "${{ env.MODEL_FILE }}" --clobber
